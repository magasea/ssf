<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shellshellfish.aaas.assetallocation.neo.mapper.FundGroupMapper">

    <resultMap id="fundGroupMap" type="com.shellshellfish.aaas.assetallocation.neo.entity.FundCombination">
        <result property="groupId" column="group_id" />
        <result property="code" column="code" />
    </resultMap>

    <select id="selectFundGroup" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        SELECT
        *
        FROM strategy a,fund_group b,fund_basic d,fund_group_details c
        where a.fund_group_id = b.id and b.id = c.fund_group_id and c.fund_code = d.code
        <if test="risk != null">
            and cust_risk = #{risk}
        </if>
        <if test="incomeyear != null">
            and investment_horizon = #{incomeyear}
        </if>
    </select>

    <insert id="insertRecommendHistory" parameterType="map">
        INSERT into Recommend_History(cust_id,fund_group_id,recommend_add_time,recommend_last_mod_time)
        VALUE (#{custID},#{fundGroupID},#{time},#{time})
    </insert>

    <select id="selectAllFundGroup" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select * from fund_group_basic a,fund_group_details b,fund_basic c,strategy d
        where a.id = b.fund_group_id and b.fund_code = c.code and a.id = d.fund_group_id
    </select>

    <select id="selectAllFundGroupNum" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select id fund_group_id,fund_group_name from fund_group
    </select>

    <select id="selectById" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select * from fund_group_sub e,fund_group a,fund_group_details b,fund_basic c,strategy d
        where a.id = b.fund_group_id and b.fund_code = c.code and a.id = d.fund_group_id and b.fund_group_sub_id = e.id
        and a.id = #{id} and b.fund_group_sub_id = #{subGroupId}
    </select>
    <select id="getInterval" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select * from fund_group_sub d,strategy a,fund_group b,fund_basic e,fund_group_details c
        where a.fund_group_id = b.id and b.id = c.fund_group_id and c.fund_code = e.code and
        c.fund_group_id=d.fund_group_id and d.id=c.fund_group_sub_id and
        ABS(d.risk_num - #{riskValue}) &lt; 0.00001 and ABS(d.income_num - #{returnValue}) &lt; 0.00001 and c.fund_group_id=#{groupId}
    </select>

    <select id="getFundCode" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select a.fname,a.code fund_code,a.fund_type_two from fund_basic a, fund_group_details b
        where a.code = b.fund_code and fund_group_id = #{id} and fund_group_sub_id = #{subId}
    </select>

    <select id="getProportionOne" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select a.fund_type_one,a.fund_group_id,sum(proportion) proportion from (select * from fund_basic a,
        fund_group_details b where a.code = b.fund_code and fund_group_id = #{id} and fund_group_sub_id = #{subId}) a
        GROUP BY a.fund_type_one
    </select>

    <select id="getProportion" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select a.fund_type_two,a.fund_group_id,sum(proportion) proportion,a.fund_code from (select * from fund_basic a,
        fund_group_details b where a.code = b.fund_code and fund_group_id = #{id} and fund_group_sub_id = #{subId}) a
        GROUP BY a.fund_type_two,a.fund_code
    </select>

    <select id="getProportionGroupByFundTypeTwo" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select c.fund_type_two, b.fund_group_id, sum(b.proportion) proportion
        from fund_basic c, fund_group_details b
        where c.code = b.fund_code
        and b.fund_group_id = #{groupId}
        and b.fund_group_sub_id = #{subGroupId}
        group by c.fund_type_two
    </select>

    <select id="getFnameAndProportion" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select a.fname, a.fund_type_one, a.fund_type_two, a.fund_group_id, proportion, a.fund_code from (select * from fund_basic a,
        fund_group_details b where a.code = b.fund_code and fund_group_id = #{id} and fund_group_sub_id = #{subId}) a
    </select>

    <select id="getFundGroupCodeList" resultType= "java.lang.String">
        select fund_code from fund_group_details where fund_group_id = #{fundGroupId} and fund_group_sub_id = #{subGroupId}
    </select>

    <update id="updateStatus" parameterType="map">
        update fund_group set status = #{status},group_last_mod_time=#{time} where id = #{id}
    </update>

    <insert id="insertFundGroup" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        insert into fund_group (FUND_GROUP_NAME,group_add_time,group_last_mod_time) VALUE (#{fund_group_name},
        #{group_add_time},#{group_add_time})
    </insert>

    <insert id="insertFundGroupDetail"
            parameterType="com.shellshellfish.aaas.assetallocation.neo.entity.FundGroupDetailsList">
        insert into fund_group_details (fund_code,fund_group_id,proportion,details_last_mod_time) VALUES
        <foreach collection="list" item="userid" index="index"
                 open="(" close=")" separator="),(">
            #{userid.fund_id},#{userid.fund_group_id},#{userid.proportion},#{userid.details_last_mod_time}
        </foreach>
    </insert>

    <select id="selectReturnAndPullback" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select * from fund_group_sub where fund_group_id = #{id} and id=#{subGroupId}
    </select>

    <select id="getPerformanceVolatility"
            resultType="com.shellshellfish.aaas.assetallocation.neo.entity.RiskIncomeInterval">
        select * from fund_group_sub b,strategy a where a.fund_group_id=b.fund_group_id
        <if test="subGroupId != null and subGroupId != ''">
            and b.id=#{subGroupId}
        </if>
        <if test="fund_group_id != null and fund_group_id !=''">
            and b.fund_group_id = #{fund_group_id}
        </if>
        <if test="cust_risk != null and cust_risk !=''">
            and a.cust_risk = #{cust_risk}
        </if>
        <if test="investment_horizon != null and investment_horizon !=''">
            and a.investment_horizon = #{investment_horizon}
        </if>
        ORDER BY b.id
    </select>

    <select id="getRevenueContribution" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select d.fund_type_two fund_type_two,sum(d.revenue_contribution) revenue_contribution,(select interval_last_mod_time from fund_group_sub
        where fund_group_id=#{id} and id=#{subGroupId}) details_last_mod_time from
        (select a.revenue_contribution,c.fund_type_two from fund_group_details a,fund_group_sub b,fund_basic c
        where a.fund_group_id = b.fund_group_id and a.fund_group_sub_id = b.id and a.fund_code = c.code and b.fund_group_id=#{id}
        and b.id=#{subGroupId}) d GROUP BY d.fund_type_two
    </select>

    <select id="getRiskController" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.RiskController">
        select * from riskcontroller where fund_group_id = #{id} and fund_group_sub_id = #{subGroupId}
    </select>
    
    <select id="getScaleMark" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.RiskIncomeInterval">
        select id,risk_num,income_num from fund_group_sub where fund_group_id=#{fundGroupId}
        <if test="subGroupId != null and subGroupId != ''">
           and id=#{subGroupId}
        </if>
        order by #{slidebarType}
    </select>

    <select id="getScaleMarkFromChoose" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.RiskIncomeInterval">
        select id,risk_num,income_num from fund_group_sub_choose where fund_group_id=#{id} and standard_type=#{standardType}
        order by #{slidebarType}
    </select>

    <select id="getFundNetValue" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundNetVal">
        select a.fund_type_two,b.navadj,b.navlatestdate navlatestDate from fund_basic a,
        fund_net_value b  where a.code=b.code and a.code=#{fund_code} order by b.navlatestdate
    </select>

    <select id="getFundGroupBuy" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundGroupBuy">
        select * from fundgroupbuydetail c where c.fund_group_buy_id = #{id}
    </select>

    <select id="getFundGroupNameById" resultType="java.lang.String">
        select fund_group_name from fund_group where id=#{id}
    </select>

    <select id="getFundGroupHistoryTime" resultType="java.lang.String">
        select time from fund_group_history
        <where>
            <if test="fund_group_id != null and fund_group_id != ''">
                and fund_group_id=#{fund_group_id}
            </if>
            <if test="subGroupId != null and subGroupId != ''">
                and fund_group_sub_id=#{subGroupId}
            </if>
        </where>
        order by time DESC LIMIT 1
    </select>

    <select id="getFundGroupHistoryTimeByRiskLevel" resultType="java.lang.String">
        select time from fund_group_history
        <where>
            <if test="risk_level != null and risk_level != ''">
                and fund_group_id=#{risk_level}
            </if>
        </where>
        order by time DESC LIMIT 1
    </select>

    <select id="getHistory" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundGroupHistory">
        select * from fund_group_history where fund_group_id = #{fund_group_id} and time >= #{time}
    </select>

    <select id="getHistoryOne" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundGroupHistory">
        select * from fund_group_history where fund_group_id = #{fund_group_id}
        <if test="fund_group_sub_id != null and fund_group_sub_id != ''">
            and fund_group_sub_id=#{fund_group_sub_id}
        </if>
        and time BETWEEN #{starttime} and #{endtime}
    </select>

    <select id="getHistoryAll" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundGroupHistory">
        select * from fund_group_history where fund_group_id = #{fund_group_id}
        <if test="fund_group_sub_id != null and fund_group_sub_id != ''">
            and fund_group_sub_id=#{fund_group_sub_id}
        </if>
    </select>

    <select id="getSharpeRatio" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundNetVal">
        select sum(a.proportion*b.navadj) navadj from fund_group_details a,fund_net_value b
        where a.fund_code=b.code and a.fund_group_id=#{fund_group_id} and a.fund_group_sub_id=#{subGroupId}
        GROUP BY b.NAVLATESTDATE
    </select>

    <select id="getExpectedIncome" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundGroupExpectedIncome">
        select * from fund_group_expected_income where fund_group_id = #{fund_group_id} and fund_group_sub_id = #{subGroupId}
    </select>

    <update id="updateSharpeRatio" >
        update fund_group_sub set sharpe_ratio = #{sharpeRatio} where id = #{id}
    </update>

    <select id="getNavadj" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundNetVal">
        select sum(a.navadj*b.proportion) navadj,a.navlatestdate from fund_net_value a,fund_group_details b
        where b.fund_group_id = #{fund_group_id}
        and b.fund_group_sub_id = #{subGroupId}
        and a.code=b.fund_code
        and a.navlatestdate >= #{startTime}
        <if test="endTime != null and endTime != '' ">
          and a.navlatestdate &lt; #{endTime}
        </if>
        group by a.navlatestdate
        order by a.navlatestdate asc
    </select>

    <select id="getNavadjByNavDates" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundNetVal">
        select sum(a.navadj*b.proportion) navadj,a.navlatestdate from fund_net_value a,fund_group_details b
        where b.fund_group_id = #{groupId}
        and b.fund_group_sub_id = #{subGroupId}
        and a.code=b.fund_code
        and a.NAVLATESTDATE in (
            <foreach collection="list" separator="," item="item">
                #{item}
            </foreach>
        )
        group by a.navlatestdate
        order by a.navlatestdate asc
    </select>

    <select id="getNavlatestdateCount" parameterType="java.util.Map" resultType="java.util.Map">
        select count(a.navDate) as count, a.navDate as navDate from(
        select count(NAVLATESTDATE) as count, NAVLATESTDATE as navDate from fund_net_value where
        code in (
            <foreach collection="list" separator="," item="item">#{item}
            </foreach>
        )
        and NAVLATESTDATE >= #{minNavDate}
        group by NAVLATESTDATE, code
        order by NAVLATESTDATE asc
        ) as a group by a.navDate
    </select>

    <select id="getNavadjBenchmark" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundNetVal">
        select sum(a.navadj*b.proportion) navadj,a.navlatestdate from fund_net_value a,fund_group_benchmark b
        where a.code=b.fund_code and b.risk_level= #{risk_level} and a.navlatestdate >= #{startTime}
        <if test="endTime != null and endTime != '' ">
          and a.navlatestdate &lt; #{endTime}
        </if>
        group by a.navlatestdate
        order by a.navlatestdate asc
    </select>

    <insert id="insertGroupNavadj">
        INSERT ignore INTO fund_group_history (fund_group_sub_id,fund_group_id,income_num,time)
        VALUES (#{subGroupId},#{fund_group_id},#{num},#{time})
    </insert>

    <insert id="batchInsertFundGroupHistory" parameterType="java.util.Map">
        <foreach collection="list" item="item" separator=";">
            insert ignore into fund_group_history (fund_group_sub_id,fund_group_id,income_num,time)
            VALUES (#{item.subGroupId},#{item.fundGroupId},#{item.incomeNum},#{item.time})
        </foreach>
    </insert>

    <insert id="insertGroupNavadjBenchmark">
        insert ignore into fund_group_history (fund_group_id,income_num,time)
        VALUES (#{risk_level},#{num},#{time})
    </insert>

    <insert id="batchInsertFundGroupHistoryBenchmark">
        <foreach collection="list" item="item" separator=";">
            insert ignore into fund_group_history (fund_group_id,income_num,time)
            VALUES (#{item.risk_level},#{item.incomeNum},#{item.time})
        </foreach>
    </insert>

    <update id="updateMaximumRetracement">
        update fund_group_history set maximum_retracement = #{retracement}
        where fund_group_id = #{fund_group_id}
        and fund_group_sub_id = #{subGroupId}
        and time = #{time}
    </update>

    <update id="batchUpdateMaximumRetracement" parameterType="java.util.List">
        <!-- 接收list参数，循环组装sql语句，注意for循环的写法
             separator=";" 代表着每次循环完，在sql后面放一个分号
             item="item" 循环List的每条的结果集
             collection="list" list 即为 map传过来的参数key -->
        <foreach collection="list" separator=";" item="item">
            update fund_group_history set maximum_retracement = #{item.retracement}
            where fund_group_id = #{item.fund_group_id}
            and fund_group_sub_id = #{item.subGroupId}
            and time = #{item.time}
        </foreach>
    </update>

    <update id="updateMaximumRetracementByRiskLevel">
        update fund_group_history set maximum_retracement = #{retracement}
        where fund_group_id = #{risk_level}
        and time = #{time}
    </update>

    <update id="batchUpdateMaximumRetracementByRiskLevel" parameterType="java.util.Map">
        <foreach collection="list" separator=";" item="item">
            update fund_group_history set maximum_retracement = #{item.retracement}
            where fund_group_id = #{item.risk_level}
            and time = #{item.time}
        </foreach>
    </update>

    <select id="getGroupStartTime" resultType="java.lang.String">
        select interval_last_mod_time from fund_group_sub where fund_group_id=#{fund_group_id} and id = #{subGroupId}
    </select>

    <select id="getEfficientFrontier" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.EfficientFrontier">
        select * from efficient_frontier where fund_group_id=#{fund_group_id}
    </select>

    <select id="getEfficientFrontierDetail" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.EfficientFrontier">
        select * from efficient_frontier_detail where efficient_frontier_id = #{id}
    </select>

    <select id="getNavadjStartTime" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundNetVal">
        select DISTINCT a.fund_code code,b.navadj*a.proportion navadj from fund_group_details a,fund_net_value b,fund_group_sub c
        where a.fund_group_id=#{fund_group_id}
        and a.fund_group_sub_id=#{subGroupId}
        and a.fund_code=b.code
        and b.NAVLATESTDATE=c.interval_last_mod_time
    </select>

    <select id="getNavadjFromStartDate" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundNetVal">
        select DISTINCT a.fund_code code,b.navadj*a.proportion navadj from fund_group_details a,fund_net_value b
        where a.fund_group_id=#{fund_group_id}
        and a.fund_group_sub_id=#{subGroupId}
        and a.fund_code=b.code
        and b.NAVLATESTDATE=#{minNavDate}
    </select>

    <select id="getNavadjByNavDate" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundNetVal">
        select DISTINCT a.fund_code code,b.navadj*a.proportion navadj from fund_group_details a,fund_net_value b
        where a.fund_group_id=#{fund_group_id}
        and a.fund_group_sub_id=#{subGroupId}
        and a.fund_code=b.code
        and b.NAVLATESTDATE=#{navDate}
    </select>

    <select id="getNavadjEndTime" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundNetVal">
        select a.fund_code code,b.navadj*a.proportion navadj from fund_group_details a,fund_net_value b
        where a.fund_group_id=#{fund_group_id}
        and a.fund_group_sub_id=#{subGroupId}
        and a.fund_code=b.code
        order by b.navlatestdate desc limit #{num}
    </select>

    <select id="getAllIdAndSubId" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.Interval">
        select id,fund_group_id from fund_group_sub
    </select>

    <select id="getRiskNum" resultType="java.lang.String">
        select cust_risk from strategy where fund_group_id = #{id}
    </select>

    <select id="selectMaximumRetracement" resultType="com.shellshellfish.aaas.assetallocation.neo.entity.FundGroupHistory">
        select maximum_retracement from fund_group_history where fund_group_id = #{id} and fund_group_sub_id = #{subId}
        and maximum_retracement is not null
    </select>


    <update id="updateContribution">
        update fund_group_details set revenue_contribution = #{contribution} where fund_group_sub_id= #{subGroupId} and fund_code= #{code}
    </update>

    <update id="batchUpdateContribution" parameterType="java.util.Map">
        <foreach collection="list" separator=";" item="item">
            update fund_group_details set revenue_contribution = #{item.contribution}
            where fund_group_sub_id = #{item.subGroupId}
            and fund_code = #{item.code}
        </foreach>
    </update>

    <update id="updateMaximumLosses">
        update fund_group_sub set maximum_losses = #{maximum_losses} where fund_group_id = #{id} and id=#{subGroupId}
    </update>

    <update id="updateExpectedMaximumRetracement">
        update fund_group_sub set expected_max_retracement = #{expected_max_retracement} where fund_group_id = #{id} and id=#{subId}
    </update>

    <!--add by yongquan.xiong-->
    <select id="findAllGroupCode"  resultType="java.lang.String">
        SELECT DISTINCT code FROM fund_group_basic WHERE is_valid='1'
    </select>

    <select id="findGroupCode"  resultType="java.lang.String">
        SELECT DISTINCT code FROM fund_group_basic WHERE group_id !='0' AND is_valid='1'
    </select>

    <select id="findBenchmarkCode"  resultType="java.lang.String">
        SELECT code FROM fund_group_basic WHERE group_id ='0' AND is_valid='1'
    </select>

    <select id="findAllGroupId"  resultMap="fundGroupMap">
        SELECT group_id ,code FROM fund_group_basic WHERE group_id !='0' AND is_valid='1'
    </select>

    <insert id="insertIntoFundGroupDetails" parameterType="com.shellshellfish.aaas.assetallocation.neo.entity.FundCombination">
        insert into fund_group_details (fund_code,fund_group_id,fund_group_sub_id,proportion,create_time)
        <foreach collection="list" item="details" index="index" separator="union all">
            ( SELECT
            #{details.code},#{details.groupId},#{details.subGroupId},#{details.proportion},#{details.createDate}
            FROM dual
            )
        </foreach>
    </insert>


    <insert id="insertIntoFundGroupSub" parameterType="com.shellshellfish.aaas.assetallocation.neo.entity.FundCombination">
        insert into fund_group_sub (id,fund_group_id,risk_num,income_num,
        expected_annualized_return,simulate_historical_year_performance,
        simulate_historical_volatility,create_time,interval_last_mod_time)
        <foreach collection="list" item="details" index="index" separator="union all">
            ( SELECT
            #{details.subGroupId},#{details.groupId},#{details.subGroupRisk},#{details.subGroupYield},
            #{details.expectedAnnualizedReturn},#{details.simulateHistoricalYearPerformance},
            #{details.simulateHistoricalVolatility}, #{details.createDate}, #{details.combinationDate}
            FROM dual
            )
        </foreach>

    </insert>

    <insert id="transIntoFundGroupDetailsHistory" >
        INSERT INTO fund_group_details_history
        SELECT * from fund_group_details
    </insert>

    <insert id="transIntoFundGroupSubHistory" >
        INSERT INTO fund_group_sub_history
        SELECT * from fund_group_sub
    </insert>

    <delete id="deleteFundGroupDetails">
        DELETE FROM fund_group_details
    </delete>

    <delete id="deleteFundGroupSub">
        DELETE FROM fund_group_sub
    </delete>


</mapper>